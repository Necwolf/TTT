import json

def flatten_fields(data):
    result = {}
    if not isinstance(data, dict):
        return result

    fields = data.get("data", {}).get("fields", [])
    for field in fields:
        if field.get("value") is None:
            continue

        label = field.get("label")
        if not label:
            continue

        value = field.get("value")
        options = field.get("options", [])

        if options:
            id_to_text = {opt["id"]: opt["text"] for opt in options if "id" in opt and "text" in opt}
            if isinstance(value, list):
                value = [id_to_text.get(v, v) for v in value]
            elif isinstance(value, str):
                value = id_to_text.get(value, value)

        if isinstance(value, list):
            value = ", ".join(str(v) for v in value)

        result[label] = value
    return result

def format_travel_message(data: dict) -> str:
    def extract_files(field_name):
        result = []
        value = data.get(field_name)
        if isinstance(value, str):
            try:
                parsed = json.loads(value.replace("'", '"'))
                if isinstance(parsed, dict):
                    result.append(parsed)
                elif isinstance(parsed, list):
                    result.extend(parsed)
            except json.JSONDecodeError:
                pass
        elif isinstance(value, dict):
            result.append(value)
        elif isinstance(value, list):
            result.extend(value)
        return result

    agenda_files = extract_files("–ê–¥–∂–µ–Ω–¥–∞")
    invite_files = extract_files("–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è")

    message = f"""üöó –í—ñ–¥—Ä—è–¥–∂–µ–Ω–Ω—è

üë§ <b>{data.get('–Ü–º º—è:', '')} {data.get('–ü—Ä—ñ–∑–≤–∏—â–µ:', '')}</b>
üìß {data.get('–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞:', '')}
üìç –í–∏—ó–∑–¥ –∑: {data.get('–ú—ñ—Å—Ç–æ –≤–∏—ó–∑–¥—É:', '')} ‚Üí {data.get('–ú—ñ—Å—Ç–æ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥:', '')}
üìÖ –î–∞—Ç–∞: {data.get('–î–∞—Ç–∞ –≤–∏—ó–∑–¥—É:', '')} ‚Äî {data.get('–î–∞—Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:', '')}
üïì –ß–∞—Å: {data.get('–ì–æ–¥–∏–Ω–∞ –≤–∏—ó–∑–¥—É:', '')} ‚Üí {data.get('–ì–æ–¥–∏–Ω–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:', '')}

üßæ –ü—Ä–æ—î–∫—Ç: {data.get('–ü—Ä–æ—î–∫—Ç:', '')}
üìÑ –î–æ–≥–æ–≤—ñ—Ä: {data.get('‚Ññ –î–æ–≥–æ–≤–æ—Ä—É / –í–∏–¥ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥:', '')}

üè® –ü—Ä–æ–∂–∏–≤–∞–Ω–Ω—è: {data.get('–ó–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è:', '')}
üöå –ü—Ä–æ—ó–∑–¥: {data.get('–ó–∞ –ø—Ä–æ—ó–∑–¥:', '')}

üéØ –ú–µ—Ç–∞: {data.get('–ú–µ—Ç–∞ –ø–æ—ó–∑–¥–∫–∏', '')}
"""

    def render_file_list(files, label):
        out = f"\nüìé <b>{label}:</b>\n"
        for file in files:
            name = file.get("name", "—Ñ–∞–π–ª")
            url = file.get("url")
            if url:
                out += f'üîó <a href="{url}">{name}</a>\n'
        return out

    if agenda_files:
        message += render_file_list(agenda_files, "–ê–¥–∂–µ–Ω–¥–∞")
    if invite_files:
        message += render_file_list(invite_files, "–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è")

    if data.get("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è (–í–∫–∞–∑–∞–Ω—ñ –¥–∞–Ω—ñ —î –∫–æ—Ä–µ–∫—Ç–Ω–∏–º–∏)"):
        message += "‚úÖ –î–∞–Ω—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ"

    return message.strip()
