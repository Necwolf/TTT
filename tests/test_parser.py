import unittest
from app.parser import extract_data_from_message

class TestParser(unittest.TestCase):
    def test_extract_data_from_message_full(self):
        text = (
            "üë§ –Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ\n"
            "üìß ivan@example.com\n"
            "üìç –í–∏—ó–∑–¥ –∑: –ö–∏—ó–≤ ‚Üí –õ—å–≤—ñ–≤\n"
            "üìÖ –î–∞—Ç–∞: 01.07.2024‚Äî05.07.2024\n"
            "üïì –ß–∞—Å: 08:00‚Üí20:00\n"
            "üßæ –ü—Ä–æ—î–∫—Ç: –ü—Ä–æ–µ–∫—Ç X\n"
            "üìÑ –î–æ–≥–æ–≤—ñ—Ä: 123/2024\n"
            "üè® –ü—Ä–æ–∂–∏–≤–∞–Ω–Ω—è: —Ç–∞–∫\n"
            "üöå –ü—Ä–æ—ó–∑–¥: –Ω—ñ\n"
            "üéØ –ú–µ—Ç–∞: –í—ñ–¥—Ä—è–¥–∂–µ–Ω–Ω—è –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—é\n"
        )
        data = extract_data_from_message(text)
        self.assertEqual(data["–Ü–º º—è:"], "–Ü–≤–∞–Ω")
        self.assertEqual(data["–ü—Ä—ñ–∑–≤–∏—â–µ:"], "–ü–µ—Ç—Ä–µ–Ω–∫–æ")
        self.assertEqual(data["–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞:"], "ivan@example.com")
        self.assertEqual(data["–ú—ñ—Å—Ç–æ –≤–∏—ó–∑–¥—É:"], "–ö–∏—ó–≤")
        self.assertEqual(data["–ú—ñ—Å—Ç–æ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥:"], "–õ—å–≤—ñ–≤")
        self.assertEqual(data["–î–∞—Ç–∞ –≤–∏—ó–∑–¥—É:"], "01.07.2024")
        self.assertEqual(data["–î–∞—Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:"], "05.07.2024")
        self.assertEqual(data["–ì–æ–¥–∏–Ω–∞ –≤–∏—ó–∑–¥—É:"], "08:00")
        self.assertEqual(data["–ì–æ–¥–∏–Ω–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:"], "20:00")
        self.assertEqual(data["–ü—Ä–æ—î–∫—Ç:"], "–ü—Ä–æ–µ–∫—Ç X")
        self.assertEqual(data["‚Ññ –î–æ–≥–æ–≤–æ—Ä—É / –í–∏–¥ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥:"], "123/2024")
        self.assertEqual(data["–ó–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è:"], "—Ç–∞–∫")
        self.assertEqual(data["–ó–∞ –ø—Ä–æ—ó–∑–¥:"], "–Ω—ñ")
        self.assertEqual(data["–ú–µ—Ç–∞ –ø–æ—ó–∑–¥–∫–∏"], "–í—ñ–¥—Ä—è–¥–∂–µ–Ω–Ω—è –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—é")

    def test_extract_data_from_message_partial(self):
        text = "üë§ –û–ª–µ–Ω–∞ –ö–æ–≤–∞–ª—å—á—É–∫\nüìß \nüìç –í–∏—ó–∑–¥ –∑: –û–¥–µ—Å–∞\n"
        data = extract_data_from_message(text)
        self.assertEqual(data["–Ü–º º—è:"], "–û–ª–µ–Ω–∞")
        self.assertEqual(data["–ü—Ä—ñ–∑–≤–∏—â–µ:"], "–ö–æ–≤–∞–ª—å—á—É–∫")
        self.assertEqual(data["–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞:"], "")
        self.assertEqual(data["–ú—ñ—Å—Ç–æ –≤–∏—ó–∑–¥—É:"], "–û–¥–µ—Å–∞")
        self.assertEqual(data["–ú—ñ—Å—Ç–æ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥:"], "")

if __name__ == "__main__":
    unittest.main() 